// To get started, press Ctrl+Space to bring up the completion menu and view the available nodes.

// You can also use the buttons in the sidebar to perform actions on nodes.
// Actions currently available include:

// * Enabling / disabling the node
// * Adding the bus to a bus
// * Removing the node
// * Connecting ADC channels

// For more help, browse the DeviceTree documentation at https://docs.zephyrproject.org/latest/guides/dts/index.html
// You can also visit the nRF DeviceTree extension documentation at https://nrfconnect.github.io/vscode-nrf-connect/devicetree/nrfdevicetree.html

// Available pins counterclockwise from top left (usb up)
// ## left side ##
// gpio0    13
// gpio0    15
// gpio0    17  uart0 rts
// gpio0    20  uart0 tx
// gpio0    22  uart0 cts
// gpio0    24  uart0 rx
// gpio1    0
// gpio0    9	+uart1 rx
// gpio0    10  +uart1 tx
// GND

// GND
// gpio1    10
// gpio1    13  spi1 miso
// gpio1    15  +mosfet_sim
// gpio0    2
// gpio0    29	+ain5
// gpio0    31  spi1 sck
// GND
// VDD OUT
// VBUS

&rtc2 {
	status = "okay";
};
&uart0 {
    compatible = "nordic,nrf-uart"; 
    status = "okay";  
    current-speed = <115200>;
  };
  
&uart1{
	status = "okay";
	current-speed = <115200>;
	pinctrl-0 = <&uart1_default>;
	pinctrl-1 = <&uart1_sleep>;
	pinctrl-names = "default", "sleep";
};

&pinctrl {
    uart1_default: uart1_default {
		group1 {
			psels = <NRF_PSEL(UART_RX, 0, 9)>;
			bias-pull-up;
		};
		group2 {
			psels = <NRF_PSEL(UART_TX, 0, 10)>;
		};
	};

	uart1_sleep: uart1_sleep {
		group1 {
			psels = <NRF_PSEL(UART_RX, 0, 9)>,
				<NRF_PSEL(UART_TX, 0, 10)>;
			low-power-enable;
		};
	};
};

/ {
    mosfets {
        compatible = "gpio-keys";
		// Gate for SIM7000
        mosfet_sim: mosfet_0 {
            gpios = <&gpio1 15 (GPIO_PULL_DOWN | GPIO_ACTIVE_HIGH)>;
        };
    };
};

// For UART over USB
/ {
	chosen {
		zephyr,console = &cdc_acm_uart0;
	};
};

&zephyr_udc0 {
	cdc_acm_uart0: cdc_acm_uart0 {
		compatible = "zephyr,cdc-acm-uart";
	};
};
